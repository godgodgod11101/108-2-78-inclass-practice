set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
set.seed(111)
sample(1:100, 10, replace = T) %>% sum()
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
set.seed(111)
sample(1:100, 10, replace = T) %>% sum()
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
set.seed(111)
sample(1:100, 10, replace = T) %>% sum()
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
set.seed(111)
sample(1:100, 10, replace = T) %>% sum()
# 從1~100任意抽10個數字（抽後放回）作加總
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# set.seed(111)
# sample(1:100, 10, replace = T) %>% sum()
rm(b, count, sum_b)
# 每次抽一個介於1到100的數字（抽後放回）抽10次，並將3的倍數的數字留下來
# for loop
output <- c()
set.seed(10)
for (.x in 1:10) {
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
output
count <- 0 # 計數器
output <- c()
set.seed(10)
while(count < 10){    # 計數上限條件
count <- count + 1    # 計數器
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
print(output)
# 每次抽一個介於1到100的數字（抽後放回）抽10次，並將3的倍數的數字留下來
# for loop
output <- c()
set.seed(10)
for (.x in 1:10) {
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
output
count <- 0 # 計數器
output <- c()
set.seed(10)
while(count < 10){    # 計數上限條件
count <- count + 1    # 計數器
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
print(output)
# 每次抽一個介於1到100的數字（抽後放回）抽10次，並將3的倍數的數字留下來
# for loop
output <- c()
set.seed(10)
for (.x in 1:10) {
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
output
count <- 0 # 計數器
output <- c()
set.seed(10)
while(count < 10){    # 計數上限條件
count <- count + 1    # 計數器
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
print(output)
sum_b <- 0
b <- sample(1:100, 10, replace = T)
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# set.seed(111)
# sample(1:100, 10, replace = T) %>% sum()
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 每次抽一個介於1到100的數字（抽後放回）抽10次，並將3的倍數的數字留下來
# for loop
output <- c()
set.seed(10)
for (.x in 1:10) {
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
output
# while loop
count <- 0 # 計數器
output <- c()
set.seed(10)
while(count < 10){    # 計數上限條件
count <- count + 1    # 計數器
new <- sample(1:100, 1, replace = T)
if(new %% 3==0){
output <- c(output, new)
}
}
print(output)
# for轉while，多了設定次數上限的步驟
rm(count, new, output)
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
b <- sample(1:100, 10, replace = T)
b
set.seed(111)
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
set.seed(111)
b <- sample(1:100, 10, replace = T)
b
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
set.seed(111)
b <- sample(1:100, 10, replace = T)
b
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
# 從1~100任意抽10個數字（抽後放回）作加總
# for loop
sum_b <- 0
set.seed(111)
b <- sample(1:100, 10, replace = T)
b
for (.x in 1:10) {
sum_b <- sum_b + b[[.x]]
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
sum_b <- 0
count <- 0
set.seed(111)
while(count < 10){
count <- count + 1
b <- sample(1:100, 1, replace = T)
sum_b <- sum_b + b
}
sum_b
rm(b, count, sum_b)
