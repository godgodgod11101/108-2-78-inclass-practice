end_age <- seq(14, 64, by = 10)
paste0(start_age, "-", end_age, )
paste0(start_age, "-", end_age)
rep(
paste0(start_age, "-", end_age),
each = 2
)
rep(
paste0(start_age, "-", end_age),
each = 2    # 每個元素重複兩次
) ->
ageLevel_new
levels(covid19$"年齡層1")
rep(
paste0(start_age, "-", end_age),
each = 2    # 每個元素重複兩次
) ->
ageLevel_1
ageLevel_new <- c("4", ageLevel_1, "65+", "65+")
ageLevel_new
levels(covid19$"年齡層1")
levels(covid19$"年齡層1") <- ageLevel_new
covid19$年齡層1
factor2 <-
factor(c("好","好","普通","普通", "好"))
levels(factor2)
factor2[[6]] <- "差"
factor2    # 元素6變NA
levels(factor2) <- c(levels(factor2), "差")
levels(factor2)
factor2[[6]] <- "差"
factor2
levels(factor2)[[4]] <- "尚可"
levels(factor2)
factor2
# 無法用c(...)把兩個factor vector串接在一起
# non factor
char1 <- c("小明", "小美")
char2 <- c("大雄", "技安")
c(char1, char2)
# factor
factor1 <- factor(c("好", "壞", "壞"))
factor2 <- factor(c("壞", "好", "好"))
c(factor1, factor2)
# 無法用c(...)把兩個factor vector串接在一起
# non factor
char1 <- c("小明", "小美")
char2 <- c("大雄", "技安")
c(char1, char2)
# factor
factor11 <- factor(c("好", "壞", "壞"))
factor22 <- factor(c("壞", "好", "好"))
c(factor1, factor2)    # factor被當成integer後才串接在一起
# 無法用c(...)把兩個factor vector串接在一起
# non factor
char1 <- c("小明", "小美")
char2 <- c("大雄", "技安")
c(char1, char2)
# factor
factor11 <- factor(c("好", "壞", "壞"))
factor22 <- factor(c("壞", "好", "好"))
c(factor11, factor22)    # factor被當成integer後才串接在一起
# 正確接法
factor11[4:6] <- factor22
factor11
forcats::fct_c(factor1, factor2)
forcats::fct_c(factor11, factor22)
library(knitr)
opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)
# windows檔名不要有"-"號
library(readr)
library(lubridate)
library(stringr)
library(glue)
c(
"https://github.com/student1/108-2-78-inclass-practice",
"github.com/student2 / 108-2-56-inclass-practice",
"https://github.com/student3/108-2-56-inclass-practice",
"student4 / 108-2-56-inclass-practice",
"student5"
) -> studentGithubURLs
studentGithubURLs
"(2-<=?)[:digit:]+"
str_detect(
studentGithubURLs, "(2-<=?)[:digit:]+"
)
str_detect(
studentGithubURLs, "(?<=2-)[:digit:]+"
)
str_view(
studentGithubURLs, "(?<=2-)[:digit:]+"
)
str_view(
studentGithubURLs, "(?<=2-)[:digit:]{2}"
)
str_view(
studentGithubURLs, "https://github.com/student[0-9]/108-2-(56|78)-inclass-practice"
)
# 學期初在輸入Github inclass-practice-repo網址時，它要長得像
# https://github.com/...../108-2-XX-inclass-practice
# 其中XX只可以是56或78，請寫下正確格式的regex，並用str_detect()判斷誰沒正確填寫：
str_view(
studentGithubURLs, "https://github.com/student[0-9]/108-2-(56|78)-inclass-practice"
)
str_view(
studentGithubURLs, "(?<=2-)[:digit:]{2}"
)
# 學期初在輸入Github inclass-practice-repo網址時，它要長得像
# https://github.com/...../108-2-XX-inclass-practice
# 其中XX只可以是56或78，請寫下正確格式的regex，並用str_detect()判斷誰沒正確填寫：
str_view(
studentGithubURLs, "https://github.com/student[0-9]/108-2-(56|78)-inclass-practice"
)
str_view(
studentGithubURLs, "https://github.com/[:graph:]+/108-2-(56|78)-inclass-practice"
)
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
str_extract(
midtermFilename, "[0-9]{9}(?=.)"
)
str_view(
midtermFilename, "[0-9]{9}(?=.)"
)
str_view(
midtermFilename, "(?<=exam1)[:digit:]+|[0-9]{9}(?=.)"
)
str_view(
midtermFilename, "(?<=exam1)[:digit:]+"
)
str_view(
midtermFilename, "(?<=[3,4])[:digit:]+"
)
str_view(
midtermFilename, "(?<=exam[1,1-])[:digit:]+"
)
str_view(
midtermFilename, "(?<=exam[1-])[:digit:]+"
)
str_view(
midtermFilename, "[^1][:digit:]+"
)
str_view(
midtermFilename, "[^1][:digit:]+(?=.)"
)
str_view(
midtermFilename, "[:digit:]{9}"
)
str_view(
midtermFilename, "[^1][:digit:]{9}"
)
str_view(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?=1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
studentGithubURLs, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_extract(
studentGithubURLs, "(?!1)[:digit:]{2}"
)
str_extract(
studentGithubURLs, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_view(
midtermFilename, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_view(
midtermFilename, "(?!1)[:digit:]{2}"
)
str_extract(
str_extract(
midtermFilename, "(?!1)[:digit:]{6}"
),
"[:digit:]{2}$"
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
str_extract(
midtermFilename, "(?!1)[:digit:]+"
)
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<=1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}(?!1)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
(?!1)
str_extract(
str_extract(
midtermFilename, "(?!1)[:digit:]{6}"
),
"[:digit:]{2}$"
)
str_view(
midtermFilename, "[:digit:]{9}(?!1)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}(?=.)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<=1)[:digit:]{9}(?=.)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?!1)"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?!1)"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?!1)[:digit:]"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]+"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[34][:digit:]{8}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 如果多了兩位99年入學但休學多年的學生
# （學號只有8位數49975013及49977012，系號是第4-5位數）
# 你的前兩題答案會不會成功？若不會，要怎麼修正？
str_extract(
midtermFilename, "(?!1)[:digit:]+(?)"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}[^1]"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_view(
midtermFilename, "[34][:digit:]{7,8}"
)
str_view(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{7}[^1]"
)
str_extract(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{7}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "499[0-9]{2}"
)
str_extract(
str_extract(
midtermFilename, "499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_view(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}(?!1)"
)
str_extract(
midtermFilename, "[34][:digit:]{8}(?!1)"
)
str_extract(
midtermFilename, "[34][:digit:]{7}(?!1)"
)
str_extract(
midtermFilename, "(31|41)[:digit:]{7}"
)
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{4}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition <- "[34]10[5678]"
targetPosition_1 <- "[34]10[5678]"
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}")
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 正確答案
str_extract(
midtermFilename, "[43](99|10[5678])[:digit:]{5}"
)
target_2 <- "[0-9]{2}"
targetPosition_2 <- "[43](99|10[5678])"
glue("(?<={targetPosition_2}){target_2}") ->
targetPatt_2
str_extract(
midtermFilename, targetPatt_2
)
# 請「只」以str_extract()完成以下任務：
#   1. 取出9位數的學號(4或3開頭的數字)。
#   2. 系號是學號的第5-6兩位數字, 如410773082的系號是73。
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
# 請「只」以str_extract()完成以下任務：
#   1. 取出9位數的學號(4或3開頭的數字)。
#   2. 系號是學號的第5-6兩位數字, 如410773082的系號是73。
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 如果多了兩位99年入學但休學多年的學生
# （學號只有8位數49975013及49977012，系號是第4-5位數）
# 你的前兩題答案會不會成功？若不會，要怎麼修正？
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{4}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
# 正確答案
str_extract(
midtermFilename, "[43](99|10[5678])[:digit:]{5}"
)
target_2 <- "[0-9]{2}"
targetPosition_2 <- "[43](99|10[5678])"
glue("(?<={targetPosition_2}){target_2}") ->
targetPatt_2
str_extract(
midtermFilename, targetPatt_2
)
