pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector()
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
class()
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:4)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]][c(1:4)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:4)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:5)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:5)]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(sep = "/")
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(sep = "/", collapse = T)
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(collapse = "/")
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":")
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":") ->
sTime_hour
weather_loc <- "臺北市"
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(collapse = "/") ->
sTime_date
weather_sTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":") ->
sTime_hour
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
glue("{sTime_date} {sTime_hour}到{weather_eTime}，天氣為「{weather_condition}」")
easyReadDate <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(collapse = "/") ->
date
return(date)
}
easyReadTime <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":") ->
hour
return(hour)
}
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
easyReadDate <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(collapse = "/") ->
date
return(date)
}
easyReadTime <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":") ->
hour
return(hour)
}
easyReadDate(weather_sTime)
weather_loc <- "臺北市"
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
easyReadDate(weather_sTime)
easyReadTime(weather_sTime)
weather_loc <- "臺北市"
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
easyReadDate(weather_sTime)
easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
easyReadDate(weather_eTime)
easyReadTime(weather_eTime)
glue("{sTime_date} {sTime_hour}到{weather_eTime}，天氣為「{weather_condition}」")
weather_loc <- "臺北市"
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
glue("{sTime_date} {sTime_hour} 到 {eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
weather_forcast <- function(weather_loc){
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
glue("{sTime_date} {sTime_hour} 到 {eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
}
library(knitr)
opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)
# windows檔名不要有"-"號
library(dplyr)
library(stringr)
library(glue)
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
easyReadDate <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(1:3)] %>%
str_c(collapse = "/") ->
date
return(date)
}
easyReadTime <- function(utcTime){
utcTime %>%
str_extract_all(
pattern = "[:digit:]+"
) %>%
.[[1]] %>%
as.vector() %>%
.[c(4, 5)] %>%
str_c(collapse = ":") ->
hour
return(hour)
}
weather_forcast <- function(weather_loc){
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
glue("{sTime_date} {sTime_hour} 到 {eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
}
weather_condition("新北市")
weather_forcast("新北市")
weather_next36hours$cwbopendata$dataset$location
weather_next36hours$cwbopendata$dataset$location$locationName
weather_forcast("金門縣")
weather_next36hours$cwbopendata$dataset
which(weather_next36hours$cwbopendata$dataset$location$locationName == "金門縣")
weather_next36hours$cwbopendata$dataset$datasetInfo
weather_next36hours$cwbopendata$dataset$datasetInfo
weather_next36hours$cwbopendata$dataset$location
weather_next36hours$cwbopendata$dataset$location$weatherElement[[21]]
weather_next36hours$cwbopendata$dataset$location$weatherElement[[21]]$time
weather_next36hours$cwbopendata$dataset$location$weatherElement[[21]]$time[[1]]
weather_next36hours$cwbopendata$dataset$location$weatherElement[[21]]$time[[1]]$parameter
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "嘉義縣")
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "嘉義縣")
weather_forcast("嘉義縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter[1]
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter$parameterName
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter$parameterName[[1]]
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "嘉義縣")
weather_forcast("嘉義縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter$parameterName[[1]]
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "嘉義縣")
weather_forcast("嘉義縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[14]]$time[[1]]$parameter$parameterName[[1]]
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "彰化縣")
weather_forcast("彰化縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[11]]$time[[1]]$parameter$parameterName[[1]]
weather_forcast <- function(weather_loc){
# 取出該縣市的資料編號
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
# 用資料編號取出天氣狀況
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
# 用資料編號取出天氣狀況對應之時段
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
# return天氣狀況
return(
glue(
"{weather_loc} {sTime_date} {sTime_hour} 到 {eTime_date} {eTime_hour}，天氣為「{weather_condition}」"
)
)
}
which(weather_next36hours$cwbopendata$dataset$location$locationName == "雲林縣")
weather_forcast("雲林縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[13]]$time[[1]]$parameter$parameterName[[1]]
weather_forcast <- function(weather_loc){
# 取出該縣市的資料編號
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
# 用資料編號取出天氣狀況
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
# 用資料編號取出天氣狀況對應之時段
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
# return天氣狀況
return(
glue(
"{weather_loc}{sTime_date} {sTime_hour}到{eTime_date} {eTime_hour}，天氣為「{weather_condition}」"
)
)
}
weather_forcast("雲林縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[13]]$time[[1]]$parameter$parameterName[[1]]
weather_forcast("雲林縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[13]]$time[[1]]$parameter$parameterName[[1]]
weather_next36hours$cwbopendata$dataset$location$locationName
str_detect("台北市", pattern = "[台臺]")
str_detect("臺北市", pattern = "[台臺]")
str_detect("新北市", pattern = "[台臺]")
weather_loc <- "台南市"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
weather_loc <- "台南市"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
weather_loc <- "台北市"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
weather_next36hours$cwbopendata$dataset$location$locationName
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc)
weather_loc <- "臺北市"
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc)
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum()
weather_loc <- "你他媽"
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum()
weather_next36hours$cwbopendata$dataset$location$locationName
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
weather_loc <- "你他媽"
loc_name <- weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
if(
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum() == 0
){
warning(
glue("out of boundries! choose the right name as below: \n {loc_name}")
)
}
weather_loc <- "你他媽"
loc_name <- weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
if(
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum() == 0
){
print(
glue("out of boundries! choose the right name as below: \n {loc_name}")
)
}
weather_forcast <- function(weather_loc){
# 將"台"換"臺"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
# 檢查使用者是否輸入正確名稱
loc_name <- weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
if(
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum() == 0
){
return(
glue("out of boundries! choose the right name as below: \n {loc_name}")
)
} else{
# 取出該縣市的資料編號
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
# 用資料編號取出天氣狀況
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
# 用資料編號取出天氣狀況對應之時段
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
# return天氣狀況
return(
glue("{weather_loc}{sTime_date} {sTime_hour}到{eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
)
}
}
weather_next36hours$cwbopendata$dataset$location$locationName
weather_next36hours$cwbopendata$dataset$location$locationName
which(weather_next36hours$cwbopendata$dataset$location$locationName == "澎湖縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[20]]$time[[1]]$parameter$parameterName[[1]]
weather_forcast("澎湖縣")
weather_next36hours$cwbopendata$dataset$location$weatherElement[[20]]$time[[1]]$parameter$parameterName[[1]]
weather_forcast("你好")
weather_forcast("桃園市")
# test2
weather_forcast("你好")
weather_forcast("桃園市")
weather_forcast("桃園市")
weather_forcast("你好")
weather_forcast("台北市")
weather_forcast("台北市")
weather_forcast <- function(weather_loc){
# 將"台"換"臺"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
# 檢查使用者是否輸入正確名稱
loc_name <- weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
if(
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum() == 0
){
return(
glue("out of boundries! choose the right name as below: \n {loc_name}")
)
} else{
# 取出該縣市的資料編號
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
# 用資料編號取出天氣狀況
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
# 用資料編號取出天氣狀況對應之時段
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
# return天氣狀況
return(
glue("{weather_loc}{sTime_date} {sTime_hour}到{eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
)
}
}
weather_forcast("台北市")
weather_forcast("桃園市")
weather_loc <- "台北市"
if(str_detect(weather_loc, pattern = "[台]")){
str_replace(weather_loc, pattern = "台", replacement = "臺")
}
weather_forcast <- function(weather_loc){
# 將"台"換"臺"
if(str_detect(weather_loc, pattern = "[台]")){
weather_loc <- str_replace(weather_loc, pattern = "台", replacement = "臺")
}
# 檢查使用者是否輸入正確名稱
loc_name <- weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_c(collapse = "、")
if(
weather_next36hours$cwbopendata$dataset$location$locationName %>%
str_detect(., pattern = weather_loc) %>%
sum() == 0
){
return(
glue("out of boundries! choose the right name as below: \n {loc_name}")
)
} else{
# 取出該縣市的資料編號
weather_num <- which(weather_next36hours$cwbopendata$dataset$location$locationName == weather_loc)
# 用資料編號取出天氣狀況
weather_condition <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$parameter$parameterName[[1]]
# 用資料編號取出天氣狀況對應之時段
weather_sTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$startTime[[1]]
sTime_date <- easyReadDate(weather_sTime)
sTime_hour <- easyReadTime(weather_sTime)
weather_eTime <- weather_next36hours$cwbopendata$dataset$location$weatherElement[[weather_num]]$time[[1]]$endTime[[1]]
eTime_date <- easyReadDate(weather_eTime)
eTime_hour <- easyReadTime(weather_eTime)
# return天氣狀況
return(
glue("{weather_loc}{sTime_date} {sTime_hour}到{eTime_date} {eTime_hour}，天氣為「{weather_condition}」")
)
}
}
weather_forcast("台北市")
weather_forcast("台北市")
weather_forcast("你好")
weather_forcast("你好")
weather_forcast("桃園市")
weather_forcast("台北市")
