)
str_view(
midtermFilename, "(?<=exam[1-])[:digit:]+"
)
str_view(
midtermFilename, "[^1][:digit:]+"
)
str_view(
midtermFilename, "[^1][:digit:]+(?=.)"
)
str_view(
midtermFilename, "[:digit:]{9}"
)
str_view(
midtermFilename, "[^1][:digit:]{9}"
)
str_view(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?=1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)[:digit:]{9}"
)
str_extract(
studentGithubURLs, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_extract(
studentGithubURLs, "(?!1)[:digit:]{2}"
)
str_extract(
studentGithubURLs, "(?!1)[:digit:]{9}"
)
str_extract(
midtermFilename, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_view(
midtermFilename, "(?!1)(?=[0-9]{4})[:digit:]{2}"
)
str_view(
midtermFilename, "(?!1)[:digit:]{2}"
)
str_extract(
str_extract(
midtermFilename, "(?!1)[:digit:]{6}"
),
"[:digit:]{2}$"
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
str_extract(
midtermFilename, "(?!1)[:digit:]+"
)
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<=1)[:digit:]{9}"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}(?!1)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?!1)[:digit:]{9}"
)    # 開頭不是1的9位數字
(?!1)
str_extract(
str_extract(
midtermFilename, "(?!1)[:digit:]{6}"
),
"[:digit:]{2}$"
)
str_view(
midtermFilename, "[:digit:]{9}(?!1)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "[:digit:]{9}(?=.)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?<=1)[:digit:]{9}(?=.)"
)    # 開頭不是1的9位數字
str_view(
midtermFilename, "(?!1)"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?!1)"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "(?!1)[:digit:]"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]+"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[:digit:]{9}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[34][:digit:]{8}"
)    # 開頭不是1的9位數字
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 如果多了兩位99年入學但休學多年的學生
# （學號只有8位數49975013及49977012，系號是第4-5位數）
# 你的前兩題答案會不會成功？若不會，要怎麼修正？
str_extract(
midtermFilename, "(?!1)[:digit:]+(?)"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}[^1]"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_view(
midtermFilename, "[34][:digit:]{7,8}"
)
str_view(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{7}[^1]"
)
str_extract(
midtermFilename, "[34][:digit:]{7}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{7}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{6}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "499[0-9]{2}"
)
str_extract(
str_extract(
midtermFilename, "499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_view(
str_extract(
midtermFilename, "[34][:digit:]{5}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
str_extract(
midtermFilename, "[34][:digit:]{8}|499[0-9]{5}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}"
)
str_extract(
midtermFilename, "[34][:digit:]{7,8}(?!1)"
)
str_extract(
midtermFilename, "[34][:digit:]{8}(?!1)"
)
str_extract(
midtermFilename, "[34][:digit:]{7}(?!1)"
)
str_extract(
midtermFilename, "(31|41)[:digit:]{7}"
)
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
),
"[:digit:]{2}$"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{4}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition <- "[34]10[5678]"
targetPosition_1 <- "[34]10[5678]"
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}")
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 正確答案
str_extract(
midtermFilename, "[43](99|10[5678])[:digit:]{5}"
)
target_2 <- "[0-9]{2}"
targetPosition_2 <- "[43](99|10[5678])"
glue("(?<={targetPosition_2}){target_2}") ->
targetPatt_2
str_extract(
midtermFilename, targetPatt_2
)
# 請「只」以str_extract()完成以下任務：
#   1. 取出9位數的學號(4或3開頭的數字)。
#   2. 系號是學號的第5-6兩位數字, 如410773082的系號是73。
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <-
c(
"exam1-410773888.rmd",
"exam1410882888.Rmd",
"410682999第一次期中考.Rmd",
"期中考310573888.R"
)
# 請「只」以str_extract()完成以下任務：
#   1. 取出9位數的學號(4或3開頭的數字)。
#   2. 系號是學號的第5-6兩位數字, 如410773082的系號是73。
str_extract(
midtermFilename, "[34][:digit:]{8}"
)
str_extract(
str_extract(
midtermFilename, "[34][:digit:]{5}"
),
"[:digit:]{2}$"
)
# 正確答案
target_1 <- "[0-9]{2}"
targetPosition_1 <- "[34]10[5678]"
glue("(?<={targetPosition_1}){target_1}") ->
targetPatt_1
str_extract(
midtermFilename, targetPatt_1
)
midtermFilename <- c(midtermFilename,"exam149975013.Rmd","499770121stExam.Rmd")
# 如果多了兩位99年入學但休學多年的學生
# （學號只有8位數49975013及49977012，系號是第4-5位數）
# 你的前兩題答案會不會成功？若不會，要怎麼修正？
str_extract(
midtermFilename, "(31|41)[:digit:]{7}|499[0-9]{5}"
)
str_extract(
str_extract(
midtermFilename, "(31|41)[:digit:]{4}|499[0-9]{2}"
),
"[:digit:]{2}$"
)
# 正確答案
str_extract(
midtermFilename, "[43](99|10[5678])[:digit:]{5}"
)
target_2 <- "[0-9]{2}"
targetPosition_2 <- "[43](99|10[5678])"
glue("(?<={targetPosition_2}){target_2}") ->
targetPatt_2
str_extract(
midtermFilename, targetPatt_2
)
library(knitr)
opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)
# windows檔名不要有"-"號
library(purrr)
library(readr)
library(lubridate)
library(stringr)
library(glue)
library(purrr)
library(knitr)
opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)
# windows檔名不要有"-"號
library(readr)
library(lubridate)
library(stringr)
library(glue)
library(purrr)
example <- list(
name = c("小明", "小花", "小新", "美美"),
height = c(175, 166, 170, 160),
weight = c(77, NA, 60, 43),
birthday = lubridate::ymd(c("1998-03-11", "1999-12-22", "1995-08-22", "2001-10-10")),
hobby = c("美食 旅遊", "旅遊 時尚", "3C 美食", "音樂 旅遊"),
residence = c("Taipei", "New Taipei", "Taichung", "Kaohsiung"),
allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O")
)
example$name == "小新"
example$name == "小新" -> pick_小新
pick_小新
example[[1]]
example[[1]][pick_小新]
data_小新 <- list(
example[[1]][pick_小新],
example[[2]][pick_小新],
example[[3]][pick_小新],
example[[4]][pick_小新],
example[[5]][pick_小新],
example[[6]][pick_小新],
example[[7]][pick_小新]
)
View(example)
View(data_小新)
data_小新 <- list(
name = example[[1]][pick_小新],
height = example[[2]][pick_小新],
weight = example[[3]][pick_小新],
birthday = example[[4]][pick_小新],
hobby = example[[5]][pick_小新],
residence = example[[6]][pick_小新],
allowance = example[[7]][pick_小新],
bloodType = example[[8]][pick_小新]
)
View(data_小新)
example <- list(
name = c("小明", "小花", "小新", "美美"),
height = c(175, 166, 170, 160),
weight = c(77, NA, 60, 43),
birthday = lubridate::ymd(c("1998-03-11", "1999-12-22", "1995-08-22", "2001-10-10")),
hobby = c("美食 旅遊", "旅遊 時尚", "3C 美食", "音樂 旅遊"),
residence = c("Taipei", "New Taipei", "Taichung", "Kaohsiung"),
allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O")
)
example$name == "小新" -> pick_student3
data_student3 <- list(
name = example[[1]][pick_student3],
height = example[[2]][pick_student3],
weight = example[[3]][pick_student3],
birthday = example[[4]][pick_student3],
hobby = example[[5]][pick_student3],
residence = example[[6]][pick_student3],
allowance = example[[7]][pick_student3],
bloodType = example[[8]][pick_student3]
)
View(example)
View(data_student3)
data_student3[["allowance"]]
map(example, ~.x[pick_student3])
data_student3 <- map(example, ~.x[pick_student3])
View(data_student3)
dance <- jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1",
simplifyDataFrame = F)
View(dance)
dance[[1]]$title
map(dance, ~.x$title)
list_danceTitle <- map(dance, ~.x$title)
list_danceTitle <- map(dance, ~.x$title)
dance <- jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1",
simplifyDataFrame = F)
list_danceTitle <- map(dance, ~.x$title)
View(list_danceTitle)
View(dance)
View(list_danceTitle)
View(dance)
dance <- jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1", simplifyDataFrame = F)
# 取出所有表演的名稱
list_danceTitle <- map(dance, ~.x$title)
View(list_danceTitle)
View(dance)
dance[[4]]$showInfo
length(dance[[4]]$showInfo)
map(dance, ~length(.x$showInfo))
list_numOfShow <- map(dance, ~length(.x$showInfo))
View(list_numOfShow)
str(dance[[4]])
str(dance[[4]]$showInfo)
dance[[4]]$showInfo
str(dance[[4]]$showInfo)
View(list_numOfShow)
View(dance)
dance[[4]]$showInfo[[1]]$time
dance[[4]]$showInfo[[2]]$time
map(dance[[4]]$showInfo, ~.x$time)
list_dance4_showTime <- map(dance[[4]]$showInfo, ~.x$time)
View(list_dance4_showTime)
num <- c(2, 5, 7, 1, 3)
num[[1]]+3
num[[1]]+3
num[[2]]+3
num[[5]]+3
num[[2]]+3
num[[5]]+3
map(num, ~.x+3)
# map()也可以用在vector
num <- c(2, 5, 7, 1, 3)
num[[1]]+3
num[[2]]+3
num[[5]]+3
map(num, ~.x+3)
chr <- c("abaa", "accd")
str_extract(chr, "[ad]")
str_extract_all(chr, "[ad]")
str_extract_all(chr[[1]], "[ad]")
str_extract_all(chr[[2]], "[ad]")
map(chr, ~ str_extract_all(.x, "[ad]"))
chr <- c("abaa", "accd")
str_extract_all(chr[[1]], "[ad]")
str_extract_all(chr[[2]], "[ad]")
map(chr, ~ str_extract_all(.x, "[ad]"))
