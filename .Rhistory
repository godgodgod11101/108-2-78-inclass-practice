output
output <- c()
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
output <- c()
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
output
rm(num1, output)
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
rm(num1, output)
output <- c()
for (.x in 1:10) {    # .x不存在於body內容裡，代表重複執行一樣的動作
num1 <- sample(1:100, 1)
if(num1  %% 3 == 0){
output <- c(output, num1)
}
}
output
rm(num1, output)
list(
list("student A", c(2,3,4,5)),
list("student B", NA), # 沒交作業
list("student C", factor(c(2,3,4,5))),
list("student D", factor(c(2,3,5)))
) -> collectionHWs
correctAns <- factor(c(2,3,4,5))
length(collectionHWs)
nameVector <- vector("character", length = length(collectionHWs))
output <- vector("integer", length = length(collectionHWs))
stuAns <- collectionHWs[[1]][[2]]
list(
list("student A", c(2,3,4,5)),
list("student B", NA), # 沒交作業
list("student C", factor(c(2,3,4,5))),
list("student D", factor(c(2,3,5)))
) -> collectionHWs
correctAns <- factor(c(2,3,4,5))
stuAns <- collectionHWs[[1]][[2]]
identical(stuAns, correctAns)
class(stuAns) == class(as.character(correctAns))
class(stuAns) == class(as.numeric(correctAns))
identical(as.character(stuAns), as.character(correctAns)
identical(as.character(stuAns), as.character(correctAns))
identical(as.character(stuAns), as.character(correctAns))
stuAns <- collectionHWs[[1]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
stuAns <- collectionHWs[[2]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
stuAns <- collectionHWs[[3]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
stuAns <- collectionHWs[[4]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
stuAns <- collectionHWs[[4]][[2]]
stuAns <- collectionHWs[[1]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
seq_along(collectionHWs)
list(
list("student A", c(2,3,4,5)),
list("student B", NA), # 沒交作業
list("student C", factor(c(2,3,4,5))),
list("student D", factor(c(2,3,5)))
) -> collectionHWs
correctAns <- factor(c(2,3,4,5))
# 對答案程式
# 學生1成績
stuAns <- collectionHWs[[1]][[2]]
if(identical(stuAns, correctAns)){
print(10)
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
print(5)
} else{
print(0)
}
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
rm(correctAns, nameVector, output, stuAns)
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))
output <- vector("integer", length = length(collectionHWs))
1 %>% {
nameVector[[.]] <- collectionHWs[[.]][[1]]
stuAns <- collectionHWs[[.]][[2]]
if(identical(stuAns, correctAns)){
output[[.]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.]] <- 5
} else{
output[[.]] <- 0
}
}
output
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))
output <- vector("integer", length = length(collectionHWs))
1 %>% {
nameVector[[.]] <- collectionHWs[[.]][[1]]
stuAns <- collectionHWs[[.]][[2]]
if(identical(stuAns, correctAns)){
output[[.]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.]] <- 5
} else{
output[[.]] <- 0
}
}
output
1 %>% {
nameVector[[.]] <- collectionHWs[[.]][[1]]
stuAns <- collectionHWs[[.]][[2]]
}
1 %>% {
collectionHWs[[.]][[1]] -> nameVector[[.]]
collectionHWs[[.]][[2]] -> stuAns
}
collectionHWs[[1]][[2]] -> stuAns
1 %>% {
if(identical(stuAns, correctAns)){
output[[.]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.]] <- 5
} else{
output[[.]] <- 0
}
}
output
1 %>% {
if(identical(stuAns, correctAns)){
output[[.]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.]] <- 5
} else{
output[[.]] <- 0
}
}
output
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))
output <- vector("integer", length = length(collectionHWs))
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))
output <- vector("integer", length = length(collectionHWs))
1 %>% {
collectionHWs[[.]][[1]] -> nameVector[[.]]
collectionHWs[[.]][[2]] -> stuAns
if(identical(stuAns, correctAns)){
output[[.]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.]] <- 5
} else{
output[[.]] <- 0
}
}
output
rm(correctAns, nameVector, output, stuAns)
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
collectionHWs[[2]][[2]]
is.na(collectionHWs[[2]][[2]])
is.vector(output)
is.vector(NA)
stuAns <- NA
is.vector(stuAns)
length(stuAns) == 1
length(correctAns) == 1
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(length(stuAns) == 1){
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
rm(correctAns, nameVector, output, stuAns)
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(length(stuAns) == 1){
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
correctAns <- factor(c(2,3,4,5))
nameVector <- vector("character", length = length(collectionHWs))    # 製作name vector
output <- vector("integer", length = length(collectionHWs))
for(.x in seq_along(collectionHWs)){
nameVector[[.x]] <- collectionHWs[[.x]][[1]]
stuAns <- collectionHWs[[.x]][[2]]
# 如果學生答案是NA，直接給0分，並改下一位
if(length(stuAns) == 1){
if(is.na(stuAns)){
output[[.x]] <- 0
next    # 不會再跑下方的程式了，換下一筆資料（增加程式效率）
}
}
if(identical(stuAns, correctAns)){
output[[.x]] <- 10
} else if(
class(stuAns) != class(correctAns) &&
identical(as.character(stuAns), as.character(correctAns))
){
output[[.x]] <- 5
} else{
output[[.x]] <- 0
}
}
names(output) <- nameVector
output
rm(correctAns, nameVector, output, stuAns)
