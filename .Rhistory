str_extract(
twDate, pattern_year
)
as.integer(
str_extract(
twDate, pattern_year
)
)
as.integer(
str_extract(
twDate, pattern_year
)
) + 1911
as.integer(
str_extract(
twDate, pattern_year
)
) + 1911 ->
yearReplacement
str_replace(
twDate, pattern_year,
replacement = yearReplacement
)
str_replace(
twDate, pattern_year,
replacement = as.character(yearReplacement)
)
str_replace(
twDate, pattern_year,
replacement = as.character(yearReplacement)
) ->
date_1
lubridate::ymd(date_1)
lubridate::ymd(date_1) ->
date_right
date_right
# 民國年月日存成date class
twDate <-  c("民國108年12月5日", "民國98年10月5日")
regex_A <- "民國"
regex_B <- "年"
glue("(?<={regex_A})[0-9]+(?={regex_B})") ->
pattern_year
as.integer(
str_extract(
twDate, pattern_year
)
) + 1911 ->
yearReplacement
str_replace(
twDate, pattern_year,
replacement = as.character(yearReplacement)
) ->
date_1
lubridate::ymd(date_1) ->
date_right
date_right
library(readr)
library(lubridate)
library(stringr)
library(glue)
target_god <- "[:digit:]+"
regex_A <- "民國"
regex_B <- "年"
glue("(?<={regex_A}){target_god}(?={regex_B})") ->
pattern_year
as.integer(
str_extract(
twDate, pattern_year
)
) + 1911 ->
yearReplacement
str_replace(
twDate, pattern_year,
replacement = as.character(yearReplacement)
) ->
date_1
lubridate::ymd(date_1) ->
date_right
date_right
str_extract_all(
"我的名字8293叫17380小abce明",
"[\u4E00-\u9FFF]+"
)
str_view(
"我的名字8293叫17380小abce明",
"[\u4E00-\u9FFF]+"
)
str_view_all(
"我的名字8293叫17380小abce明",
"[\u4E00-\u9FFF]+"
)
str_view_all(
"我的名字8293叫17380小abce明%^",
"[\u4E00-\u9FFF]+"
)
str_view_all(
"我的名字8293叫17380小abce明%^",
"[:graph:]+"
)
str_view_all(
"我的名字8293叫17380小abce明%^",
"[\u4E00-\u9FFF]+"
)
# [\u4E00-\u9FFF]---代表所有中日韓文字字元，不包含英、數、符。
str_view_all(
"我的名字8293叫17380小abce明%^",
"[:graph:]+"
)
library(knitr)
opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)
# windows檔名不要有"-"號
library(readr)
library(lubridate)
library(stringr)
library(glue)
char1 <- c("Wild","Apple","Donald","May","Avocada")
factor1 <- factor(char1)
levels(factor1)
char1 <- c("Wild","Apple","Donald","May","Avocada")
factor1 <- factor(char1)
levels(factor1)
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭")
factor2 <- factor(char2)
levels(factor2)
sort(
str_sub(char2,1,1)
)
sort(
str_sub(char2,2,2)
)
# sort()：排序（電腦自動排）
sort(
str_sub(char2,1,1)
)
sort(
str_sub(char2,2,2)
)
Sys.getlocale("LC_COLLATE")
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
View(covid19)
levels(covid19$年齡層)
levels(
as.factor(covid19$年齡層)
)
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)]
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level
factor(
covid19$年齡層,
levels = age_level,
ordered = T
)
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) ->
covid19$年齡層
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) ->
covid19$年齡層
levels(covid19)
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) ->
covid19$年齡層
levels(covid19$年齡層)
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) ->
covid19$年齡層
levels(covid19$年齡層)
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) -> covid19$年齡層
levels(covid19$年齡層)
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level
factor(
covid19$年齡層,
levels = age_level,
ordered = T
) -> covid19$年齡層
levels(covid19$年齡層)
covid19$年齡層 <- factor(
covid19$年齡層,
levels = age_level,
ordered = T
)
levels(covid19$年齡層)
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level
covid19$年齡層 <- factor(
covid19$年齡層,
levels = age_level,
ordered = T
)
levels(covid19$年齡層)
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)]
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
View(covid19)
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level_r
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level_r
covid19$年齡層 <- factor(
covid19$年齡層,
levels = age_level_r,
ordered = T
)
levels(covid19$年齡層)
levels(covid19$縣市)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
print(population)
class(population)
print(population)
names(population)
population[["南投縣"]]
print(population)    # 有取名稱的vector
class(population)
names(population)
population[["南投縣"]]
population[["南投縣"]]
names(population)
population[levels(covid19$縣市)]
levels(covid19$縣市)
population[levels(covid19$縣市)]
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
View(population)
population$新北市
View(covid19)
View(population)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
population[levels(covid19$縣市)] ->
population
population
sort(
population,
decreasing = T
)
sort(
population,
decreasing = T
) ->
population
population
names(population)
name_newLevel <-
names(population)
factor(
covid19$縣市,
levels = name_newLevel,
ordered = T
)
factor(
covid19$縣市,
levels = name_newLevel,
ordered = T
) ->
covid19$縣市
factor(
covid19$縣市,
levels = name_newLevel,
ordered = T
) ->
covid19$縣市
covid19$縣市 <- factor(
covid19$縣市,
levels = name_newLevel,
ordered = T
)
levels(covid19$縣市)
clc
View(covid19)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level_r
covid19$年齡層_order1 <- factor(
covid19$年齡層,
levels = age_level_r,
ordered = T
)
levels(covid19$年齡層_order1)
View(covid19)
levels(factor(covid19$年齡層))
# 可排序類別資料：年齡層
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level_r
covid19$年齡層_order1 <- factor(
covid19$年齡層,
levels = age_level_r,
ordered = T
)
levels(covid19$年齡層_order1)
levels(factor(covid19$年齡層))
levels(factor(covid19$年齡層))
library(readr)
library(lubridate)
library(stringr)
library(glue)
str_extract(
levels(factor(covid19$年齡層)),
pattern = "^[:digit:]+"
)
str_extract(
levels(factor(covid19$年齡層)),
pattern = "^[:digit:]{2}"
)
str_extract(
levels(factor(covid19$年齡層)),
pattern = "^[:digit:]{1,2}"
)
str_extract(
levels(factor(covid19$年齡層)),
pattern = "^[:digit:]+"
)
levels(factor(covid19$年齡層))
levels(factor(covid19$年齡層)) ->
vector_name
str_extract(
vector_name,
pattern = "^[:digit:]+"
)
str_extract(
vector_name,
pattern = "^[:digit:]+"
) ->
vector_value
as.integer(vector_value)
as.integer(vector_value) ->
vector_value
names(vector_value)
names(vector_value) <- vector_name
names(vector_value)    # 觀察元素名稱
names(vector_value) <- vector_name
sort(
vector_value
)
sort(
vector_value
) ->
vector_value
covid19$年齡層_order2 <-
factor(
covid19$年齡層,
levels = names(vector_value),
ordered = T
)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
# 依「人口多寡」排序縣市
print(population)
class(population)    # 有取名稱的integer vector
names(population)
levels(covid19$縣市)    # 為字串vector
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
levels(
as.factor(covid19$年齡層)
) ->
age_level
age_level[c(7, 10, 1:6, 8, 9, 11, 12, 13:15)] ->
age_level_r
covid19$年齡層_order1 <- factor(
covid19$年齡層,
levels = age_level_r,
ordered = T
)
levels(covid19$年齡層_order1)
levels(factor(covid19$年齡層))
levels(factor(covid19$年齡層)) ->
vector_name
str_extract(
vector_name,
pattern = "^[:digit:]+"
) ->
vector_value
as.integer(vector_value) ->
vector_value
# 創造named vector
names(vector_value)    # 觀察元素名稱
names(vector_value) <- vector_name    # 為元素取名
# 創造named vector
names(vector_value)    # 觀察元素名稱
# sort()排序
sort(
vector_value
) ->
vector_value
covid19$年齡層_order2 <-
factor(
covid19$年齡層,
levels = names(vector_value),
ordered = T
)
levels(covid19$年齡層_order1)
levels(covid19$年齡層_order2)
# 年齡排序
levels(factor(covid19$年齡層)) ->
vector_name
str_extract(
vector_name,
pattern = "^[:digit:]+"
) ->
vector_value
as.integer(vector_value) ->
vector_value
# 創造named vector
names(vector_value)    # 觀察元素名稱
names(vector_value) <- vector_name    # 為元素取名
# sort()排序
sort(
vector_value
) ->
vector_value
covid19$年齡層_order2 <-
factor(
covid19$年齡層,
levels = names(vector_value),
ordered = T
)
levels(covid19$年齡層_order1)
levels(covid19$年齡層_order2)
View(covid19)
