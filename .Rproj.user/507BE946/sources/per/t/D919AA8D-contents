---
title: "Untitled"
author: "jacky wang"
date: "2020/6/8"
output: html_document
---

```{r setup, include=FALSE}

library(knitr)

opts_chunk$set(echo = TRUE, message = F, warning = T, eval=T)

# windows檔名不要有"-"號

```

```{r package, include=FALSE}

library(readr)
library(lubridate)
library(stringr)
library(glue)

```





# On list

```{r}

library(purrr)

```

## 每個元素相同運算

```{r}

example <- list(
  name = c("小明", "小花", "小新", "美美"), 
  height = c(175, 166, 170, 160), 
  weight = c(77, NA, 60, 43), 
  birthday = lubridate::ymd(c("1998-03-11", "1999-12-22", "1995-08-22", "2001-10-10")), 
  hobby = c("美食 旅遊", "旅遊 時尚", "3C 美食", "音樂 旅遊"), 
  residence = c("Taipei", "New Taipei", "Taichung", "Kaohsiung"), 
  allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")), 
  bloodType = c("A", "B", "B", "O")
)

```

```{r}

# 拿出其中屬於小新的資料

example$name == "小新" -> pick_student3

data_student3 <- list(
  name = example[[1]][pick_student3], 
  height = example[[2]][pick_student3], 
  weight = example[[3]][pick_student3], 
  birthday = example[[4]][pick_student3], 
  hobby = example[[5]][pick_student3], 
  residence = example[[6]][pick_student3], 
  allowance = example[[7]][pick_student3], 
  bloodType = example[[8]][pick_student3]
)

# 太麻煩！用purrr::map(list, ~.x動作)
#   ~代表要形成一個formula；.x代表每個元素（這裡是[[1]]、[[2]]…）

data_student3 <- map(example, ~.x[pick_student3])

```

```{r}

dance <- jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1", simplifyDataFrame = F)

```

```{r}

# 取出所有表演的名稱

list_danceTitle <- map(dance, ~.x$title)

```

```{r}

# 計算每個表演的場次總數

list_numOfShow <- map(dance, ~length(.x$showInfo))

```

```{r}

# 第4個表演有6個場次，想知道它們的日期時間

str(dance[[4]]$showInfo)

dance[[4]]$showInfo[[1]]$time
dance[[4]]$showInfo[[2]]$time

list_dance4_showTime <- map(dance[[4]]$showInfo, ~.x$time)


# 步驟：
#   1. 先寫出反覆要做的動作
#   2. 觀察取元素變化的地方

```

```{r}

# map()也可以用在vector

num <- c(2, 5, 7, 1, 3)

num[[1]]+3
num[[2]]+3
num[[5]]+3

map(num, ~.x+3)    # 會以list方式呈現

```

```{r}

chr <- c("abaa", "accd")

str_extract_all(chr[[1]], "[ad]")
str_extract_all(chr[[2]], "[ad]")

map(chr, ~ str_extract_all(.x, "[ad]"))

```























